<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChangeHotKey" xml:space="preserve">
    <value>Change the keyboard shortcut</value>
  </data>
  <data name="ClosePasteBarWhenMouseIsAway" xml:space="preserve">
    <value>Close the paste bar when the mouse moves away</value>
  </data>
  <data name="ClosePasteBarWithHotKey" xml:space="preserve">
    <value>Close with the keyboard shortcut</value>
  </data>
  <data name="CurrentHotKey" xml:space="preserve">
    <value>Current keyboard shortcut</value>
  </data>
  <data name="HotKey" xml:space="preserve">
    <value>Open with a keyboard shortcut</value>
  </data>
  <data name="HotKeyPopupHelpText" xml:space="preserve">
    <value>Press Enter to start to record the new keyboard shortcut then press the keys of the new shortcut, one by one. The Tab, Space and Enter key are forbidden. Press Enter to accept the new shortcut or Escape to cancel.</value>
  </data>
  <data name="HotKeyPopup_Accept" xml:space="preserve">
    <value>Accept this shortcut</value>
  </data>
  <data name="HotKeyPopup_Description1" xml:space="preserve">
    <value>Use this popup to change the keyboard shortcut.</value>
  </data>
  <data name="HotKeyPopup_Description2" xml:space="preserve">
    <value>Try your new keyboard shortcut by typing on the keys you want to use, one by one :</value>
  </data>
  <data name="HotKeyPopup_Description3" xml:space="preserve">
    <value>Tab, Enter and Space keys are forbidden.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="MouseGesture" xml:space="preserve">
    <value>Open the paste bar with a mouse gesture</value>
  </data>
  <data name="MouseGesture_Description" xml:space="preserve">
    <value>This option will open the paste bar with a mouse gesture. When the paste bar position is set to top, put the mouse at the top of the screen, then scroll down. When the paste bar position is set to bottom, put the mouse at the bottom of the screen, then scroll top.</value>
  </data>
  <data name="PasteBarPosition" xml:space="preserve">
    <value>Paste bar position on the screen</value>
  </data>
  <data name="PasteBarPosition_Bottom" xml:space="preserve">
    <value>Bottom of the screen</value>
  </data>
  <data name="PasteBarPosition_Top" xml:space="preserve">
    <value>Top of the screen</value>
  </data>
  <data name="RestoreDefault" xml:space="preserve">
    <value>Restore default settings</value>
  </data>
  <data name="RestoreDefault_Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="RestoreDefault_Confirmation" xml:space="preserve">
    <value>Are you sure to restore the software ot its default values? The application will stop to synchronize your data.</value>
  </data>
  <data name="StartWithWindows" xml:space="preserve">
    <value>Start automatically when I sign in to Windows</value>
  </data>
</root>
