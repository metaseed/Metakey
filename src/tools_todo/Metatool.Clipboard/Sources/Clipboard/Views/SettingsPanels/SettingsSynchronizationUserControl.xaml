<UserControl x:Class="Clipboard.Views.SettingsPanels.SettingsSynchronizationUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Clipboard.Views.SettingsPanels"
             xmlns:settingsPanels="clr-namespace:Clipboard.ViewModels.SettingsPanels"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:controls="clr-namespace:Clipboard.ComponentModel.UI.Controls"
             xmlns:converters="clr-namespace:Clipboard.ComponentModel.UI.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <converters:MultiBindingConverter x:Key="MultiBindingConverter"/>
        <converters:BooleanToInvertedBooleanConverter x:Key="BooleanToInvertedBooleanConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" IsInverted="True"/>
    </UserControl.Resources>
    <UserControl.DataContext>
        <settingsPanels:SettingsSynchronizationUserControlViewModel/>
    </UserControl.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <command:EventToCommand Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <StackPanel>
        <TextBlock Text="{Binding Language.SettingsSynchronizationUserControl.Description}" Focusable="{Binding IsScreenReaderRunning}" KeyboardNavigation.TabIndex="0" TextWrapping="Wrap"/>

        <WrapPanel Orientation="Horizontal" Margin="0,20,0,0">
            <Button x:Name="UnlinkCloudStorageServiceButton" Content="{Binding Language.SettingsSynchronizationUserControl.Disconnect}" IsEnabled="{Binding IsLoadingInfo, Converter={StaticResource BooleanToInvertedBooleanConverter}}" HorizontalAlignment="Left" Visibility="{Binding IsLinkedToCloudStorageService, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding UnlinkCommand}"/>
            <Button x:Name="LinkCloudStorageServiceButton" Content="{Binding Language.SettingsSynchronizationUserControl.Connect}" IsEnabled="{Binding IsLoadingInfo, Converter={StaticResource BooleanToInvertedBooleanConverter}}" HorizontalAlignment="Left" Visibility="{Binding IsLinkedToCloudStorageService, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" Command="{Binding LinkToCloudStorageServiceCommand}"/>
            <controls:ProgressRing IsActive="{Binding IsLoadingInfo}" Margin="10,0,0,0" Height="25" Width="25" Visibility="{Binding IsLoadingInfo, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBlock Text="{Binding Language.SettingsSynchronizationUserControl.ConnectionProblem}" Margin="10,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Visibility="{Binding ConnectionProblem, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </WrapPanel>
        <Popup PlacementTarget="{Binding ElementName=UnlinkCloudStorageServiceButton}" MaxWidth="300" StaysOpen="False" IsOpen="{Binding IsUnlinkCloudStorageServicePopupOpened, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <Border Style="{StaticResource PopupBackgroundBorderStyle}">
                <StackPanel>
                    <TextBlock Text="{Binding Language.SettingsSynchronizationUserControl.UnlinkConfirmation}" TextWrapping="Wrap"/>
                    <Button x:Name="UnlinkCloudConfirmButton" Content="{Binding Language.SettingsSynchronizationUserControl.Confirm}" AutomationProperties.HelpText="{Binding Language.SettingsSynchronizationUserControl.UnlinkConfirmation}" HorizontalAlignment="Left" Margin="0,10,0,0" Command="{Binding ConfirmUnlinkCommand}"/>
                </StackPanel>
            </Border>
        </Popup>
        <Popup PlacementTarget="{Binding ElementName=LinkCloudStorageServiceButton}" StaysOpen="{Binding IsAuthenticatingCloudStorageService}" MaxWidth="520" IsOpen="{Binding IsLinkCloudStorageServicePopupOpened, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <Popup.InputBindings>
                <KeyBinding Key="Esc" Command="{Binding LinkToCloudStorageServicePopupClosedCommand}" CommandParameter="{Binding ElementName=AuthenticationUserControl}" />
            </Popup.InputBindings>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Closed">
                    <command:EventToCommand Command="{Binding LinkToCloudStorageServicePopupClosedCommand}" CommandParameter="{Binding ElementName=AuthenticationUserControl}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Border Style="{StaticResource PopupBackgroundBorderStyle}">
                <Grid>
                    <ItemsControl x:Name="CloudProviderItemsControl" ItemsSource="{Binding CloudStorageProviders}" Margin="-5" Visibility="{Binding IsAuthenticatingCloudStorageService, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" IsTabStop="False">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Height="128" Width="128" Margin="5" ToolTip="{Binding Name}" Content="{Binding}" Command="{Binding DataContext.StartLinkCloudCommand, ElementName=LinkCloudStorageServiceButton}">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiBindingConverter}">
                                            <Binding Path="Content" RelativeSource="{RelativeSource Self}"/>
                                            <Binding ElementName="AuthenticationUserControl"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Button.ContentTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <ContentControl Template="{Binding Icon}" Height="72" Width="72" HorizontalAlignment="Center" Focusable="False" IsTabStop="False"/>
                                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" TextWrapping="Wrap"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Button.ContentTemplate>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <controls:CloudStorageAuthenticationUserControl x:Name="AuthenticationUserControl" Visibility="{Binding IsAuthenticatingCloudStorageService, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
            </Border>
        </Popup>

        <Border Padding="0,20,0,0" HorizontalAlignment="Left" Visibility="{Binding IsLinkedToCloudStorageService, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border BorderBrush="{StaticResource SeparatorBrush}" BorderThickness="1" Padding="10">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Language.SettingsSynchronizationUserControl.Name}" AutomationProperties.HelpText="{Binding CurrentCloudStorageServiceUserName}" Focusable="{Binding IsScreenReaderRunning}" KeyboardNavigation.TabIndex="0" VerticalAlignment="Center"/>
                        <TextBlock Text=" : " VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding CurrentCloudStorageServiceUserName}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <TextBlock Text="{Binding Language.SettingsSynchronizationUserControl.Provider}" AutomationProperties.HelpText="{Binding CurrentCloudStorageServiceName}" Focusable="{Binding IsScreenReaderRunning}" KeyboardNavigation.TabIndex="0" VerticalAlignment="Center"/>
                        <TextBlock Text=" : " VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding CurrentCloudStorageServiceName}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <Button Content="{Binding Language.SettingsSynchronizationUserControl.SyncNow}" Command="{Binding SynchronizeNowCommand}" IsEnabled="{Binding IsLoadingInfo, Converter={StaticResource BooleanToInvertedBooleanConverter}}" Margin="0,20,0,0" HorizontalAlignment="Left"/>
                </StackPanel>
            </Border>
        </Border>

        <CheckBox Content="{Binding Language.SettingsSynchronizationUserControl.MeteredConnection}" IsChecked="{Binding AvoidMeteredConnection, Mode=TwoWay}" Margin="0,20,0,0"/>

        <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
            <TextBlock x:Name="textBlock" Text="{Binding Language.SettingsSynchronizationUserControl.SynchronizeEvery}" VerticalAlignment="Center"/>
            <TextBlock Text=" : " VerticalAlignment="Center"/>
            <controls:TouchTextBox PlaceHolder="1-60" Width="100" CanClear="False" Text="{Binding SynchronizationInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AutomationProperties.LabeledBy="{Binding ElementName=textBlock, Mode=OneWay}"/>
            <TextBlock Text=" " VerticalAlignment="Center"/>
            <TextBlock Text="{Binding Language.SettingsSynchronizationUserControl.Minutes}" VerticalAlignment="Center"/>
        </StackPanel>

        <TextBlock Text="{Binding Language.SettingsSynchronizationUserControl.FileNotSynchronized}" Focusable="{Binding IsScreenReaderRunning}" KeyboardNavigation.TabIndex="0" Margin="0,20,0,0" TextWrapping="Wrap"/>

        <Border Margin="0,50,0,0"/>
    </StackPanel>
</UserControl>
